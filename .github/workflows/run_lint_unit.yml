name: Run syntax checks, static code analysis and unit tests
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
    timeout-minutes: 10

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run syntax checks
        run: |
          python -m pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Code Inspector GitHub action
        uses: codeinspectorio/github-action@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          code_inspector_access_key: ${{ secrets.CODE_INSPECTOR_ACCESS_KEY }}
          code_inspector_secret_key: ${{ secrets.CODE_INSPECTOR_SECRET_KEY }}
          min_quality_grade: 'NEUTRAL'
          min_quality_score: '70'
          max_defects_rate: '0.05'
          max_complex_functions_rate: '0.1'
          max_long_functions_rate: '0.1'
          project_name: 'web_metrics_posting'
          max_timeout_sec: '600'

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --dev

      - name: Run test suite
        run: |
          pipenv run pytest -m "unit"
